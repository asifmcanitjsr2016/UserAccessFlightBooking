// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserAccessFlightBooking.DBContexts;

namespace UserAccessFlightBooking.Migrations
{
    [DbContext(typeof(TicketBookingContext))]
    partial class TicketBookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserAccessFlightBooking.Models.BookingHistory", b =>
                {
                    b.Property<string>("PNRNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Doj")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PNRNumber");

                    b.ToTable("BookingHistory");
                });

            modelBuilder.Entity("UserAccessFlightBooking.Models.Discount", b =>
                {
                    b.Property<string>("CouponCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightDetailsFlightNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CouponCode");

                    b.HasIndex("FlightDetailsFlightNumber");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("UserAccessFlightBooking.Models.FlightDetails", b =>
                {
                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Airline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstrumentUsed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Meal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfRows")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ScheduledDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalBusinessClassSeat")
                        .HasColumnType("int");

                    b.Property<int>("TotalNonBusinessClassSeat")
                        .HasColumnType("int");

                    b.HasKey("FlightNumber");

                    b.ToTable("FlightDetails");
                });

            modelBuilder.Entity("UserAccessFlightBooking.Models.Passenger", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AppliedCoupon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookingHistoryPNRNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClassType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptForMeal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeatNo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("BookingHistoryPNRNumber");

                    b.ToTable("Passenger");
                });

            modelBuilder.Entity("UserAccessFlightBooking.Models.Discount", b =>
                {
                    b.HasOne("UserAccessFlightBooking.Models.FlightDetails", null)
                        .WithMany("Discounts")
                        .HasForeignKey("FlightDetailsFlightNumber");
                });

            modelBuilder.Entity("UserAccessFlightBooking.Models.Passenger", b =>
                {
                    b.HasOne("UserAccessFlightBooking.Models.BookingHistory", null)
                        .WithMany("PassengerDetails")
                        .HasForeignKey("BookingHistoryPNRNumber");
                });

            modelBuilder.Entity("UserAccessFlightBooking.Models.BookingHistory", b =>
                {
                    b.Navigation("PassengerDetails");
                });

            modelBuilder.Entity("UserAccessFlightBooking.Models.FlightDetails", b =>
                {
                    b.Navigation("Discounts");
                });
#pragma warning restore 612, 618
        }
    }
}
